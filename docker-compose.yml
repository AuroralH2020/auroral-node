version: '2.4'
services:
  auroral-agent:
    restart: unless-stopped
    image: ghcr.io/auroralh2020/auroral-node-agent:latest
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 15s
      timeout: 15s
      retries: 10
    depends_on:
      cache-db:
        condition: service_healthy
      wothive:
        condition: service_healthy
      triplestore:
        condition: service_healthy
    volumes:
    - ./.env:/app/.env:ro
    extra_hosts:
    - "myhost:host-gateway"
  proxy:
    restart: unless-stopped
    depends_on:
      cache-db:
        condition: service_healthy
      auroral-agent:
        condition: service_healthy
    ports:
      - '${EXTERNAL_PORT}:8080'
    image: ghcr.io/auroralh2020/auroral-node-proxy:latest
  gateway:
    restart: unless-stopped
    volumes:
    - aur_gateway:/gateway/persistance
    - ./.env:/gateway/.env:ro
    image: ghcr.io/auroralh2020/auroral_gateway_js:latest
  cache-db:
    restart: unless-stopped
    # ports:
    # - 6379:6379
    volumes:
    - aur_redis:/data
    command: [
      "bash", "-c",
      '
       docker-entrypoint.sh
       --requirepass "${DB_PASSWORD}" 
       --bind "0.0.0.0"
      '
    ]
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    image: redis:6.2.6-buster
  triplestore:
    image: acimmino/auroral-fuseky:latest
    volumes:
     - aur_triplestore:/fuseki
    healthcheck:
      test: ["CMD", "curl", "localhost:3030/"]
      interval: 15s
      timeout: 15s
      retries: 10
    # ports:
      # - '3030:3030'
  wothive:
    image: acimmino/wot-hive:0.2.3
    healthcheck:
      test: ["CMD", "curl", "localhost:9000/"]
      interval: 15s
      timeout: 15s
      retries: 10
    # ports:
      # - '9000:9000'
volumes:
  aur_triplestore:
  aur_gateway:
  aur_redis: